<launch>
	<arg name="use_opencv_capture" value="true" />
	
	<!--  		se l'immagine non proviene direttamente dalla cattura di opencv, lancio usbcam320-->
	<include  unless="$(arg use_opencv_capture)" file="$(find rm_usbcam)/launch/usbcam320.launch"/>
	
	<arg if="$(arg use_opencv_capture)"     name="topic_img_in" value="/xxx"/>
	<arg unless="$(arg use_opencv_capture)" name="topic_img_in" value="/robot/usbcam/image_raw/compressed" />

	<!-- 	                                                                         deve essere compressed -->
	<arg if="$(arg use_opencv_capture)"     name="topic_img_out" value="/robot/usbcam/image_raw/compressed"/>
	<arg unless="$(arg use_opencv_capture)" name="topic_img_out" value="/robot/camera/image_raw/compressed" />

	<!--  		se l'immagine proviene direttamente dalla cattura di opencv, devo ripubblicarla  verso facerecognition MA IN FORMATO RAW !!-->
	<node  if="$(arg use_opencv_capture)"     name="republish2facerecognition" type="republish" pkg="image_transport" output="screen" args="compressed  in:=/robot/usbcam/image_raw raw out:=/robot/camera/image_raw" />
 	<node  unless="$(arg use_opencv_capture)" name="republish2facerecognition" type="republish" pkg="image_transport" output="screen" args="compressed  in:=/robot/camera/image_raw/  raw out:=/robot/camera/image_raw" />
 
 



	<node pkg="edge_tpu" name="edgetpu" type="detect.py" output="screen">
		<param name="model_path" value="$(find edge_tpu)/models/mobilenet_ssd_v2_coco_quant_postprocess_edgetpu.tflite" />
		<param name="label_path" value="$(find edge_tpu)/models/coco_labels_it.txt" />
		<param name="show_detections" value="1"/>
		 <!-- Se true pubblica l'immagine con le detection su /edgetpu/image_raw/compressed-->
		<param name="publish_img" value="true"/>
		<param name="topic_img_out" value="$(arg topic_img_out)"/>
		
		<!-- Se true acquisisce direttamente da OpenCV anzichè sottoscrivere da ros-->
		<param name="img_from_cv2" value="$(arg use_opencv_capture)"/>
		<param name="device_id" value="2"/>
		<param name="topic_img_in" value="$(arg topic_img_in)"/>
   		<param  if="$(arg use_opencv_capture)"   name="camera_info_url" value="$(find rm_usbcam)/camera_info/usbcam320.yaml" />
 
	 

		 <!-- rate vale solo se img_from_cv2 =true altrimenti il rate è dato dal framerate in ingresso -->
		<param name="rate" value="10"/>   
	 
		<!-- imposto il tipo di sorgente video -->
		<!--<remap from="/camera/compressed" to="/robot/raspicam/image/compressed" /> -->
	<!--
		<remap from="/camera/compressed" to="v4l/camera/image_raw/compressed" />
		<remap from="/camera" to="/robot/usbcam/image_raw" />	
	-->
	</node>
	
 

 
</launch>
